package work.kd0826;

import java.math.BigInteger;
import java.util.Scanner;

/**
 * @author heyao
 * @date 2023-08-26 14:52
 */
public class QuReplace {
    final static int MOD = 1000000007,N = 110,M = 10010;
    //前i个字符构成的数取余p为j的方案数
    static long[][] f = new long[N][M];
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String s = input.next();//字符串
        char[] array = s.toCharArray();
        int p = input.nextInt();
        int n = s.length();
        if(array[0] == '?'){
            for(int x = 0;x <= 9;x++){
                f[0][x % p]++;
            }
        }else {
            f[0][(array[0]-'0') % p]=1;
        }
        for(int i = 1;i < n;i++){
            if(array[i] == '?'){
                //对于f[i-1][j]其余数为j，代表的数字可以表示为k*p+j
                //当我们增加一位，并将该位的值赋值为x的时候，代表的数字为(k*p+j)*10+x

                for(int x = 0;x <= 9;x++){
                    for(int j = 0;j < p;j++){
                        f[i][(j * 10 % p + x % p) % p] += f[i-1][j];
                        f[i][(j * 10 % p + x % p) % p] %= MOD;
                    }
                }
            }else {
                int x = array[i]-'0';
                for(int j = 0;j < p;j++){
                    f[i][(j * 10 % p + x % p) % p] += f[i-1][j];
                    f[i][(j * 10 % p + x % p) % p] %= MOD;
                }
            }
        }
        System.out.println(f[n-1][0]);
    }
}
